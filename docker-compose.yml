version: '3.8'

services:
  rodent-detection:
    build:
      context: .
      dockerfile: Dockerfile
    image: rodent-ai-vision-box:latest
    container_name: rodent-ai-detector
    restart: unless-stopped
    
    # Hardware access (for Raspberry Pi camera)
    devices:
      - /dev/video0:/dev/video0
    
    # Volumes for persistence
    volumes:
      - ./config:/app/config:ro
      - ./models:/app/models:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - /mnt/wyze_sd:/mnt/wyze_sd:ro  # Wyze camera SD card mount
    
    # Environment variables
    env_file:
      - .env
    
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DETECTION_CONFIDENCE=${DETECTION_CONFIDENCE:-0.25}
      - ALERT_COOLDOWN=${ALERT_COOLDOWN:-600}
      - TZ=${TZ:-America/New_York}
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Network
    networks:
      - rodent-net

  # Optional: Monitoring with Prometheus + Grafana
  prometheus:
    image: prom/prometheus:latest
    container_name: rodent-prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - rodent-net
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: rodent-grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=
    ports:
      - "3000:3000"
    networks:
      - rodent-net
    profiles:
      - monitoring

networks:
  rodent-net:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: